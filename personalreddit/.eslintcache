[{"C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalreddit\\src\\index.js":"1","C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalreddit\\src\\reportWebVitals.js":"2","C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalreddit\\src\\App.js":"3","C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalreddit\\src\\sections\\header.js":"4","C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalreddit\\src\\sections\\main.js":"5","C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalreddit\\src\\sections\\nav.js":"6","C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalreddit\\src\\sections\\karma.js":"7","C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalreddit\\src\\sections\\postfooter.js":"8","C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalreddit\\src\\sections\\comment.js":"9","C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalReddit\\src\\index.js":"10","C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalReddit\\src\\App.js":"11","C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalReddit\\src\\reportWebVitals.js":"12","C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalReddit\\src\\sections\\header.js":"13","C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalReddit\\src\\sections\\main.js":"14","C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalReddit\\src\\sections\\nav.js":"15","C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalReddit\\src\\sections\\karma.js":"16","C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalReddit\\src\\sections\\postfooter.js":"17"},{"size":500,"mtime":1609089131749,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1609089131749,"results":"20","hashOfConfig":"19"},{"size":1670,"mtime":1609725995481,"results":"21","hashOfConfig":"19"},{"size":484,"mtime":1609613868400,"results":"22","hashOfConfig":"19"},{"size":2067,"mtime":1609725954883,"results":"23","hashOfConfig":"19"},{"size":794,"mtime":1609718156142,"results":"24","hashOfConfig":"19"},{"size":364,"mtime":1609685421856,"results":"25","hashOfConfig":"19"},{"size":355,"mtime":1609712727427,"results":"26","hashOfConfig":"19"},{"size":354,"mtime":1609615084704,"results":"27","hashOfConfig":"19"},{"size":500,"mtime":1609089131749,"results":"28","hashOfConfig":"29"},{"size":1613,"mtime":1609700131206,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1609089131749,"results":"31","hashOfConfig":"29"},{"size":484,"mtime":1609613868400,"results":"32","hashOfConfig":"29"},{"size":2020,"mtime":1609717406925,"results":"33","hashOfConfig":"29"},{"size":835,"mtime":1609698483672,"results":"34","hashOfConfig":"29"},{"size":364,"mtime":1609685421856,"results":"35","hashOfConfig":"29"},{"size":355,"mtime":1609712727427,"results":"36","hashOfConfig":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1c5l45d",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wqat33",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalreddit\\src\\index.js",[],["76","77"],"C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalreddit\\src\\reportWebVitals.js",[],"C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalreddit\\src\\App.js",["78"],"\nimport './App.css';\nimport { Header } from './sections/header'\nimport { Main } from './sections/main'\nimport { Nav } from './sections/nav'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport React,{ useEffect, useState } from 'react';\n \n\n\nfunction App() {\n\n  \n\n        const navList = [{\n          key: 1,\n          reddit: \"/history\",\n          redditName:\"History\",\n          image: \"history.png\",\n      },\n      {\n          key: 2,\n          reddit: \"/AmericanHistory\",\n          redditName:\"American History\",\n          image: \"americanhistory.png\",\n      },\n      {\n          key: 3,\n          reddit: \"/AskHistorians\",\n          redditName:\"Ask Historians\",\n          image: \"askhistorians.png\",\n      },\n      {\n          key: 4,\n          reddit: \"/HistoryAnecdotes\",\n          redditName:\"r/History Anecdotes\",\n          image: \"historyanecdotes.jpg\",\n      }\n\n      ]\n\n      \n\n      const [navItems] = useState(navList);\n      const [currentReddit,setCurrentReddit ] = useState();\n\n\n      const handleClick = (event) => {\n          setCurrentReddit(() => event.target.id)\n          \n      }\n\n  return (\n    <Router>\n    <div className=\"App\">\n      <Header />\n      <div className=\"mainmain\">\n      <Switch>\n          <Route path=\"/\" exact render={(props => <Main chosen={\"/history\"} />)} />\n          {navItems.map((item) => (\n            <Route path={item.reddit} exact render={(props => <Main chosen={item.reddit} />)} />\n          ))}\n         \n        </Switch>\n      <Nav navItems={navItems} currentReddit={currentReddit} onClick={handleClick}/>\n      \n      </div>\n    </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalreddit\\src\\sections\\header.js",[],"C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalreddit\\src\\sections\\main.js",["79"],"import React, { useEffect, useState } from 'react'\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\n\r\nimport { Karma } from './karma';\r\nimport { Footer } from './postfooter';\r\n/* import { Comment } from './comment' */\r\n\r\n\r\nexport const Main = (props) => {\r\n\r\n  \r\n  useEffect(() => fetchItems(), [props.chosen]);\r\n  useEffect(() => window.scrollTo(0,0))\r\n  \r\n\r\n\r\n\r\n  const url = `https://www.reddit.com/r${props.chosen}/new.json`\r\n\r\n  const [items,setItems] = useState([]);\r\n\r\n  const fetchItems = async () => {\r\n    const data = await fetch(\r\n      url\r\n    )\r\n    const list = await data.json();\r\n    setItems(list.data.children);  \r\n  };\r\n\r\n  \r\n  const translate = (text) => {\r\n\r\n    let fin = text.replace('&lt;!-- SC_OFF --&gt;','').replace('&lt;!-- SC_ON --&gt;','').replace('class=\"md\"','');\r\n    let finfin = ReactHtmlParser(fin)\r\n    return finfin[0]\r\n  }\r\n\r\n  const translate2 = (text) => {\r\n\r\n    let fin = text.replace('&lt;!-- SC_OFF --&gt;','').replace('&lt;!-- SC_ON --&gt;','').replace('class=\"md\"','');\r\n    let finfin = ReactHtmlParser(fin)\r\n    if (finfin[0].endsWith('.jpg')){\r\n      return \"<img src='\"+finfin[0]+\"'/>\"\r\n  \r\n  }\r\n\r\n  }\r\n\r\n  return (\r\n      \r\n    \r\n\r\n    <main>\r\n    {items.map(item => (\r\n      <React.Fragment>\r\n        \r\n          <article>\r\n          <Karma karma={item.data.score}/>\r\n            <div className=\"postInfo\">\r\n              <h2>{item.data.title}</h2>\r\n              {item.data.selftext_html ? <React.Fragment>{ReactHtmlParser (translate(item.data.selftext_html))}</React.Fragment> : <p>{item.data.selftext}</p>}\r\n              {item.data.url ? <React.Fragment>{ReactHtmlParser (translate2(item.data.url))}</React.Fragment> : <p>{item.data.selftext}</p>}\r\n              <Footer author={item.data.author} commentCount={item.data.num_comments} timePosted={item.data.created_utc}/>\r\n              {/* <Comment /> */}\r\n            </div>         \r\n          </article>\r\n      \r\n         \r\n        \r\n      </React.Fragment>\r\n          ))}\r\n      {/* <button>BACK TO LIST</button>  */}  \r\n    </main>\r\n       \r\n  )\r\n}","C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalreddit\\src\\sections\\nav.js",[],"C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalreddit\\src\\sections\\karma.js",[],"C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalreddit\\src\\sections\\postfooter.js",[],["80","81"],"C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalreddit\\src\\sections\\comment.js",[],["82","83"],"C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalReddit\\src\\index.js",[],"C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalReddit\\src\\App.js",[],"C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalReddit\\src\\reportWebVitals.js",[],"C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalReddit\\src\\sections\\header.js",[],"C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalReddit\\src\\sections\\main.js",["84"],"C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalReddit\\src\\sections\\nav.js",["85"],"C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalReddit\\src\\sections\\karma.js",[],"C:\\Users\\danbe\\Desktop\\An App a Day\\personalReddit\\personalReddit\\src\\sections\\postfooter.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":7,"column":16,"nodeType":"92","messageId":"93","endLine":7,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":13,"column":33,"nodeType":"96","endLine":13,"endColumn":47,"suggestions":"97"},{"ruleId":"86","replacedBy":"98"},{"ruleId":"88","replacedBy":"99"},{"ruleId":"86","replacedBy":"100"},{"ruleId":"88","replacedBy":"101"},{"ruleId":"94","severity":1,"message":"95","line":13,"column":33,"nodeType":"96","endLine":13,"endColumn":47,"suggestions":"102"},{"ruleId":"90","severity":1,"message":"103","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":25},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchItems'. Either include it or remove the dependency array.","ArrayExpression",["106"],["104"],["105"],["104"],["105"],["107"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"108","fix":"110"},"Update the dependencies array to be: [fetchItems, props.chosen]",{"range":"111","text":"112"},{"range":"113","text":"112"},[299,313],"[fetchItems, props.chosen]",[299,313]]